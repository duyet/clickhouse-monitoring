name: Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'docs/**'
  workflow_dispatch:

permissions:
  pages: write
  contents: read
  id-token: write

jobs:
  docs:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docs_changes:
              - 'docs/**'

      - if: steps.changes.outputs.docs_changes == 'true'
        name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Next Cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        working-directory: docs
        run: pnpm install

      - name: Build
        working-directory: docs
        run: pnpm build

      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
